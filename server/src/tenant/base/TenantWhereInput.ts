/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { ServicePointListRelationFilter } from "../../servicePoint/base/ServicePointListRelationFilter";
import { EnumTenantTenantType } from "./EnumTenantTenantType";
@InputType()
class TenantWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  email?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  phone?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => ServicePointListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ServicePointListRelationFilter)
  @IsOptional()
  @Field(() => ServicePointListRelationFilter, {
    nullable: true,
  })
  servicePoints?: ServicePointListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumTenantTenantType,
  })
  @IsEnum(EnumTenantTenantType)
  @IsOptional()
  @Field(() => EnumTenantTenantType, {
    nullable: true,
  })
  tenantType?: "DH_DD" | "DH_SD" | "SH_SD";
}
export { TenantWhereInput };

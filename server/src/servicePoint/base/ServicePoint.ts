/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsDate,
  ValidateNested,
  IsOptional,
  IsBoolean,
} from "class-validator";
import { Type } from "class-transformer";
import { DeliveryAreaGroup } from "../../deliveryAreaGroup/base/DeliveryAreaGroup";
import { DeliveryArea } from "../../deliveryArea/base/DeliveryArea";
import { DeliverySlot } from "../../deliverySlot/base/DeliverySlot";
import { PickupLocation } from "../../pickupLocation/base/PickupLocation";
import { PickupSlot } from "../../pickupSlot/base/PickupSlot";
import { Product } from "../../product/base/Product";
import { Tenant } from "../../tenant/base/Tenant";
@ObjectType()
class ServicePoint {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  address!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [DeliveryAreaGroup],
  })
  @ValidateNested()
  @Type(() => DeliveryAreaGroup)
  @IsOptional()
  deliveryAreaGroups?: Array<DeliveryAreaGroup>;

  @ApiProperty({
    required: false,
    type: () => [DeliveryArea],
  })
  @ValidateNested()
  @Type(() => DeliveryArea)
  @IsOptional()
  deliveryAreas?: Array<DeliveryArea>;

  @ApiProperty({
    required: false,
    type: () => [DeliverySlot],
  })
  @ValidateNested()
  @Type(() => DeliverySlot)
  @IsOptional()
  deliverySlots?: Array<DeliverySlot>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  email!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  ghanaPostGps!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isActive!: boolean;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  phone!: string;

  @ApiProperty({
    required: false,
    type: () => [PickupLocation],
  })
  @ValidateNested()
  @Type(() => PickupLocation)
  @IsOptional()
  pickupLocations?: Array<PickupLocation>;

  @ApiProperty({
    required: false,
    type: () => [PickupSlot],
  })
  @ValidateNested()
  @Type(() => PickupSlot)
  @IsOptional()
  pickupSlots?: Array<PickupSlot>;

  @ApiProperty({
    required: false,
    type: () => [Product],
  })
  @ValidateNested()
  @Type(() => Product)
  @IsOptional()
  products?: Array<Product>;

  @ApiProperty({
    required: true,
    type: () => Tenant,
  })
  @ValidateNested()
  @Type(() => Tenant)
  tenant?: Tenant;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { ServicePoint };
